#!/bin/bash

# --------------------- CONFIG BEGIN ---------------------

# The location of the saves folder on your cloud storage.
destinationFolder=/Test/Batocera/saves

# Waiting time between two backups in seconds. The below configuration means that the service will do a backup every minute.
waitSeconds=60 # TODO: change it back to 60

# ---------------------- CONFIG END ----------------------

runFile=/var/run/backup
statusFile=/var/run/backup.status
logFile=/var/log/backup.log

# TODO: exclude flatpak!

manual() {
    rclone sync /userdata/saves backup:${destinationFolder} --progress
}

start() {
    touch ${runFile}
    while test -e ${runFile}; do
        nextBackup=$(($(date +%s) + ${waitSeconds}))
        echo ${nextBackup} >${statusFile}
        sleep ${waitSeconds}

        echo "0" >${statusFile}
        rm -f ${logFile}
        rclone sync /userdata/saves backup:${destinationFolder} --log-file ${logFile} --log-level INFO --stats 1s

        # TODO: Make is possible to sync other stuff.
        # Examples:
        #     /userdata/system/batocera.conf
        #     /userdata/bios
        #     /userdata/roms
    done
}

stop() {
    rm -f ${runFile}
}

status() {
    if test -e ${runFile}; then
        nextBackupSeconds=$(<${statusFile})

        if [ ${nextBackupSeconds} -eq "0" ]; then
            cat ${logFile}
        else
            nextBackupDate=$(date --date @${nextBackupSeconds})
            echo "There's no backup in progress. Next: ${nextBackupDate}"
        fi
    else
        echo "Service is not running."
    fi
}

case "$1" in
    manual)
        manual
        ;;
    start)
        start &
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    *)
        echo "Usage: https://gitlab.com/peterbozso/batocera-scripts#backup"
        ;;
esac
